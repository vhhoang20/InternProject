// <auto-generated />
using System;
using InternProject.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternProject.Migrations
{
    [DbContext(typeof(APIDbContext))]
    partial class APIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternProject.Database.Model.countries", b =>
                {
                    b.Property<string>("country_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("country_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("region_id")
                        .HasColumnType("int");

                    b.HasKey("country_id");

                    b.HasIndex("region_id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("InternProject.Database.Model.departments", b =>
                {
                    b.Property<int>("department_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("department_id"));

                    b.Property<string>("department_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("location_id")
                        .HasColumnType("int");

                    b.HasKey("department_id");

                    b.HasIndex("location_id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("InternProject.Database.Model.dependents", b =>
                {
                    b.Property<int>("dependent_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dependent_id"));

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dependent_id");

                    b.HasIndex("employee_id");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("InternProject.Database.Model.employees", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employee_id"));

                    b.Property<int?>("department_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("hire_date")
                        .HasColumnType("date");

                    b.Property<int>("job_id")
                        .HasColumnType("int");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("manager_id")
                        .HasColumnType("int");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("employee_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("InternProject.Database.Model.jobs", b =>
                {
                    b.Property<int>("job_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("job_id"));

                    b.Property<string>("job_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("max_salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("min_salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("job_id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("InternProject.Database.Model.locations", b =>
                {
                    b.Property<int>("location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("location_id"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("postal_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state_province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("location_id");

                    b.HasIndex("country_id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("InternProject.Database.Model.regions", b =>
                {
                    b.Property<int>("region_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("region_id"));

                    b.Property<string>("region_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("region_id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("InternProject.Database.Model.countries", b =>
                {
                    b.HasOne("InternProject.Database.Model.regions", "region")
                        .WithMany()
                        .HasForeignKey("region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("region");
                });

            modelBuilder.Entity("InternProject.Database.Model.departments", b =>
                {
                    b.HasOne("InternProject.Database.Model.locations", "location")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.Navigation("location");
                });

            modelBuilder.Entity("InternProject.Database.Model.dependents", b =>
                {
                    b.HasOne("InternProject.Database.Model.employees", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("InternProject.Database.Model.locations", b =>
                {
                    b.HasOne("InternProject.Database.Model.countries", "country")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });
#pragma warning restore 612, 618
        }
    }
}
